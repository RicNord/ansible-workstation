
- name: Install pyenv
  tags:
    - python
    - pyenv
  block:
    - name: Pyenv apt packages for building new version
      when: ansible_os_family == 'Debian'
      tags:
        - Debian
      ansible.builtin.apt:
        pkg:
          - libffi-dev
          - libbz2-dev
          - libncurses5-dev
          - libreadline-dev
          - liblzma-dev
          - libsqlite3-dev
          - libsasl2-dev
        state: present

    - name: Clone repo
      ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv.git
        force: true
        dest: "{{ home }}/.pyenv"
      become: true
      become_user: "{{ user }}"

    - name: Update .bash_ansible
      ansible.builtin.blockinfile:
        path: "{{ home }}/.bash_ansible"
        block: |
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init --path)"
        marker: "# <!--- {mark} PYENV ANSIBLE MANAGED BLOCK --->"
        create: true
        mode: '664'
        owner: "{{ user }}"
        group: "{{ user }}"

- name: Pipx for Debian
  when: ansible_os_family == 'Debian'
  tags:
    - Debian
  block:
    - name: Install pipx
      ansible.builtin.apt:
        pkg:
          - pipx
        state: present

    - name: Install pipx pkgs
      community.general.pipx:
        name: "{{ item }}"
        state: present
      loop:
        - virtualenv
        - pipenv
        - tox

- name: Install python libs for arch
  tags:
    - Archlinux
  when: ansible_os_family == "Archlinux"
  community.general.pacman:
    name:
      - python-pipenv
      - python-tox
      - python-virtualenv
    state: present
    reason: explicit

- name: Miniconda
  block:
    - name: Get stats miniconda.sh
      check_mode: true
      ansible.builtin.stat:
        path: "{{ home }}/repos/usr/.ansible/miniconda.sh"
        checksum_algorithm: "sha1"
        get_checksum: true
      register: miniconda_installer_file

    - name: Download miniconda installer
      ansible.builtin.get_url:
        url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        dest: "{{ home }}/repos/usr/.ansible/miniconda.sh"
        mode: '644'
        owner: "{{ user }}"
        group: "{{ user }}"
        force: false
      register: miniconda_installer_download

    - name: Install miniconda
      when: ( not miniconda_installer_file.stat.exists ) or ( miniconda_installer_download.changed )
      ansible.builtin.shell: |
        bash {{ home }}/repos/usr/.ansible/miniconda.sh -b -u -p {{ home }}/miniconda
      become: true
      become_user: "{{ user }}"

- name: Update .bash_ansible
  ansible.builtin.blockinfile:
    path: "{{ home }}/.bash_ansible"
    block: |
      export CONDA_AUTO_ACTIVATE_BASE=false
    marker: "# <!--- {mark} CONDA ANSIBLE MANAGED BLOCK --->"
    create: true
    mode: '664'
    owner: "{{ user }}"
    group: "{{ user }}"
