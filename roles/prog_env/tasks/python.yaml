
- name: Install pyenv
  tags:
    - python
    - pyenv
  block:
    - name: Pyenv apt packages for building new version
      when: ansible_os_family == 'Debian'
      tags:
        - debian
        - apt
      ansible.builtin.apt:
        pkg:
          - libffi-dev
          - libbz2-dev
          - libncurses5-dev
          - libreadline-dev
          - liblzma-dev
          - libsqlite3-dev
          - libsasl2-dev
        state: present

    - name: Clone repo
      ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv.git
        force: true
        dest: "{{ home }}/.pyenv"
      become: true
      become_user: "{{ user }}"

    - name: Update .bash_ansible
      ansible.builtin.blockinfile:
        path: "{{ home }}/.bash_ansible"
        block: |
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init --path)"
        marker: "# <!--- {mark} PYENV ANSIBLE MANAGED BLOCK --->"
        create: true
        mode: '664'
        owner: "{{ user }}"
        group: "{{ user }}"

- name: Install conda
  ansible.builtin.get_url:
    url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    dest: "{{ home }}/repos/usr/.ansible/miniconda.sh"
    mode: '644'
    owner: "{{ user }}"
    group: "{{ user }}"

# TODO make a handler
- name: Install miniconda
  ansible.builtin.shell: |
    bash {{ home }}/repos/usr/.ansible/miniconda.sh -b -u -p {{ home }}/miniconda

- name: Update .bash_ansible
  ansible.builtin.blockinfile:
    path: "{{ home }}/.bash_ansible"
    block: |
      export CONDA_AUTO_ACTIVATE_BASE=false
    marker: "# <!--- {mark} CONDA ANSIBLE MANAGED BLOCK --->"
    create: true
    mode: '664'
    owner: "{{ user }}"
    group: "{{ user }}"
